{
    "config": {
        "defaults": {
            "api_call": {
                "request": {
                    "base_url": "http://127.0.0.1:3000",
                    "headers": {
                        "Accept": "application/json",
                        "Content-Type": "application/json"
                    }
                }
            }
        }
    },
    "data": {},
    "suites": [
        {
            "name": "t6 Full Suite",
            "tests": [
                {
                	"name": "can create a User",
                	"description": "create a User",
                    "api_calls": [
                        {
                        	"request": "POST /v2.0.1/users",
                            "params": {
                                "email": "m.lory+{{$run_id}}@free.fr",
                                "firstName": "My FirstName {{$run_id}}",
                                "lastName": "My LastName"
                            },
                            "assert": [],
                            "save": {
                                "saved.key": "body.token.key",
                                "saved.secret": "body.token.secret",
                                "saved.user_id": "body.user.data.id",
                                "saved.subscription_date": "body.user.data.attributes.subscription_date",
                                "saved.username": "body.user.data.attributes.email",
                                "saved.reset_password_token": "body.user.data.attributes.token",
                                "saved.unsubscription_token": "body.user.data.attributes.unsubscription_token"
                            },
                            "status": "201"
                        }
                    ]
                },
                {
                	"name": "Set password",
                	"description": "Set password",
                    "api_calls": [
                        {
                        	"request": "POST /v2.0.1/users/token/{{saved.reset_password_token}}",
                            "params": {
                                "password": "{{$run_id}}:{{$run_id}}"
                            },
                            "status": "200",
                            "save": {
                                "saved.reset_password_token": "body.token"
                            }
                        }
                    ]
                },
                {
                	"name": "Sign In (/authenticate)",
                	"description": "Sign In (/authenticate)",
                    "api_calls": [
                        {
                        	"request": "POST /v2.0.1/authenticate",
                            "params": {
                                "username": "m.lory+{{$run_id}}@free.fr",
                                "password": "{{$run_id}}:{{$run_id}}"
                            },
                            "assert": [],
                            "status": "200",
                            "save": {
                                "saved.bearer_token": "body.token",
                                "saved.bearer_refresh_token": "body.refresh_token"
                            }
                        }
                    ]
                },
                {
                	"name": "Generate email instruction to reset a User password",
                	"description": "Generate email instruction to reset a User password",
                    "api_calls": [
                        {
                        	"request": "POST /v2.0.1/users/instruction",
                            "params": {
                                "email": "m.lory+{{$run_id}}@free.fr"
                            },
                            "assert": [],
                            "status": "200"
                        }
                    ]
                },
                {
                	"name": "can create a simple Token for that User",
                    "description": "create a simple Token",
                    "api_calls": [
                        {
                        	"request": "POST /v2.0.1/authenticate",
                            "params": {
                                "username": "{{saved.username}}",
                                "password": "{{$run_id}}:{{$run_id}}"
                            },
                            "save": {
                                "saved.bearer": "body.token"
                            },
                            "status": "200"
                        }
                    ]
                },
                {
                	"name": "can update a User",
                    "description": "update a User",
                    "api_calls": [
                        {
                        	"request": "PUT /v2.0.1/users/{{saved.user_id}}",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "params": {
                                "email": "myUpdatedEmail+{{$run_id}}@domain.tld",
                                "firstName": "My Updated FirstName",
                                "lastName": "My Updated LastName"
                            },
                            "status": "200",
                            "assert": {
        	                    "select": "body.message",
        	                    "equal": "Successfully updated"
        	                }
                        }
                    ]
                },
                {
                	"name": "can create a Flow for that User",
                    "description": "create a Flow for that User",
                    "api_calls": [
                        {
                        	"request": "POST /v2.0.1/flows",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "params": {
                                "name": "My Flow Name",
                                "objects": [
                                    "{{saved.object_id}}",
                                    "1"
                                ],
                                "permission": 644,
                                "unit": "String"
                            },
                            "save": {
                                "saved.flow_id": "body.flow.data.id"
                            },
                            "status": "201"
                        }
                    ]
                },
                {
                	"name": "can publish data to Flow",
                    "description": "publish data to Flow",
                    "api_calls": [
                        {
                        	"request": "POST /v2.0.1/data",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "params": {
                                "flow_id": "{{saved.flow_id}}",
                                "mqtt_topic": "couleurs/test",
                                "publish": true,
                                "save": true,
                                "value": "Hello World",
                                "text": "Meta text information",
                                "object_id": "{{saved.object_id}}"
                            },
                            "save": {
                            	"saved.data_id_full_url": "body.data.0.links.self",
                            	"saved.data_id": "body.data.0.id",
                            	"saved.time": "body.data.0.attributes.time"
                            },
                            "status": 200,
                            "assert": {
        	                    "select": "body.data",
        	                    "size": 1
        	                }
                        }
                    ]
                },
                {
                	"name": "can create an Object",
                    "description": "create an Object",
                    "api_calls": [
                        {
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "request": "POST /v2.0.1/objects",
                            "params": {
                                "description": "My object description",
                                "ipv4": "127.0.0.1",
                                "ipv6": "2001:0db8:0000:85a3:0000:0000:ac1f:8001",
                                "name": "My Object",
                                "position": "LivingRoom",
                                "type": "phone",
                                "user_id": "{{saved.user_id}}"
                            },
                            "save": {
                                "saved.object_id": "body.object.data.id"
                            },
                            "status": "201",
                            "assert": [{
        	                    "select": "body.message",
        	                    "equal": "Created"
        	                }]
                        }
                    ]
                },
                {
                	"name": "can create a Public Object",
                    "description": "create a Public Object",
                    "api_calls": [
                        {
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "request": "POST /v2.0.1/objects",
                            "params": {
                                "description": "My Public object description.",
                                "ipv4": "127.0.0.2",
                                "ipv6": "2001:0db8:0000:85a3:0000:0000:ac1f:8002",
                                "name": "My Public Object",
                                "position": "LivingRoom",
                                "type": "phone",
                                "isPublic": "true",
                                "user_id": "{{saved.user_id}}"
                            },
                            "save": {
                                "saved.object_id2": "body.object.data.id"
                            },
                            "status": "201",
                            "assert": [{
        	                    "select": "body.message",
        	                    "equal": "Created"
        	                }]
                        }
                    ]
                },
                {
                	"name": "Object public page returns an error when non public",
                    "description": "Object public page returns an error when non public",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/objects/{{saved.object_id}}/public",
                            "save": {},
                            "status": "404"
                        }
                    ]
                },
                {
                	"name": "can get an Object public page",
                    "description": "can get an Object public page",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/objects/{{saved.object_id2}}/public",
                            "save": {},
                            "status": "200"
                        }
                    ]
                },
                {
                	"name": "can update an Object",
                    "description": "update an Object",
                    "api_calls": [
                        {
                        	"request": "PUT /v2.0.1/objects/{{saved.object_id}}",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "params": {
                                "description": "My object updated description",
                                "ipv4": "127.0.0.2",
                                "ipv6": "2001:0db8:0000:85a3:0000:0000:ac1f:4008",
                                "name": "My Updated Object",
                                "position": "BedRoom",
                                "type": "smartphone",
                                "user_id": "{{saved.user_id}}"
                            },
                            "save": {},
                            "status": "200",
                            "assert": [{
        	                    "select": "body.message",
        	                    "equal": "Successfully updated"
        	                }]
                        }
                    ]
                },
                {
                	"name": "can get a specific Object",
                    "description": "get a specific Object",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/objects/{{saved.object_id}}",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "save": {},
                            "status": "200"
                        }
                    ]
                },
                {
                	"name": "can get an Object from name",
                    "description": "get an Object from name",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/objects/?name=Updated%20Object",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "save": {},
                            "status": "200",
                            "assert": {
        	                    "select": "body.data",
        	                    "size": 1
        	                }
                        }
                    ]
                },
                {
                	"name": "can get all my Objects",
                    "description": "get all my Objects",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/objects/",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "save": {},
                            "status": "200",
                            "assert": {
        	                    "select": "body.data",
        	                    "size": 2
        	                }
                        }
                    ]
                },
                {
                	"name": "can update a Flow",
                    "description": "update a Flow",
                    "api_calls": [
                        {
                        	"request": "PUT /v2.0.1/flows/{{saved.flow_id}}",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "params": {
                                "data_type": "",
                                "name": "My Flow Name UPDATED",
                                "objects": [
                                    "{{saved.object_id}}"
                                ],
                                "unit": "String",
                                "theme": "",
                                "data_type": "a394e18f-12bd-4c22-b9c3-74c387d1a8d",
                                "unit_id": "c528045b-4928-45ad-83fa-4a242eb6059e"
                            },
                            "save": {},
                            "status": 200,
                            "assert": {
        	                    "select": "body.flow.data.attributes.name",
        	                    "equal": "My Flow Name UPDATED"
        	                }
                        }
                    ]
                },
                {
                	"name": "Get User from JWT claim",
                    "description": "Get User from JWT claim",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/users/me/token",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "status": "200"
                        }
                    ]
                },
                {
                	"name": "Get User active sessions from JWT claim",
                	"description": "Get User active sessions from JWT claim",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/users/me/sessions",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "assert": [],
                            "status": "200",
                            "save": {
                            }
                        }
                    ]
                },
                {
                	"name": "can get All Dashboards",
                    "description": "get All Dashboards",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/dashboards",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "status": 200,
                            "assert": {
        	                    "select": "body.data",
        	                    "size": 0
        	                }
                        }
                    ]
                },
                {
                	"name": "can get All Snippets",
                    "description": "get All Snippets",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/snippets",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "status": 200,
                            "assert": {
        	                    "select": "body.data",
        	                    "size": 0
        	                }
                        }
                    ]
                },
                {
                	"name": "can get All Objects",
                    "description": "get All Objects",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/objects",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "status": 200,
                            "assert": {
        	                    "select": "body.data",
        	                    "size": 2
        	                }
                        }
                    ]
                },
                {
                	"name": "can get a specific data from Flow",
                    "description": "get a specific data from Flow",
                    "api_calls": [
                        {
                        	"request": "GET {{saved.data_id_full_url}}",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "status": 200,
                            "assert": [{
        	                    "select": "body.data.0.id",
        	                    "equal": "{{saved.data_id}}"
        	                }]
                        }
                    ]
                },
                {
                	"name": "can delete an Object",
                    "description": "delete an Object",
                    "api_calls": [
                        {
                        	"request": "DELETE /v2.0.1/objects/{{saved.object_id}}",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "save": {},
                            "status": 200,
                            "assert": {
        	                    "select": "body.removed_id",
        	                    "equal": "{{saved.object_id}}"
        	                }
                        }
                    ]
                },
                {
                	"name": "cannot get a deleted Object",
                    "description": "cannot get a deleted Object",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/objects/{{saved.object_id}}",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "status": 200,
                            "assert": {
        	                    "select": "body.data",
        	                    "size": 0
        	                }
                        }
                    ]
                },
                {
                	"name": "can delete a Flow",
                    "description": "delete a Flow",
                    "api_calls": [
                        {
                        	"request": "DELETE /v2.0.1/flows/{{saved.flow_id}}",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "save": {},
                            "status": 200
                        }
                    ]
                },
                {
                	"name": "cannot get a deleted Flow",
                    "description": "cannot get a deleted Flow",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/flows/{{saved.flow_id}}",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "status": 404
                        }
                    ]
                },
                {
                	"name": "can verify a User",
                    "description": "verify a User",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/users/{{saved.user_id}}",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "save": {},
                            "status": 200,
                            "assert": [{
        	                    "select": "body.data",
        	                    "size": 1
        	                }]
                        }
                    ]
                },
                {
                	"name": "can delete a User",
                    "description": "delete a User",
                    "api_calls": [
                        {
                        	"request": "DELETE /v2.0.1/users/{{saved.user_id}}",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "save": {},
                            "status": 200,
                            "assert": {
        	                    "select": "body.removed_id",
        	                    "equal": "{{saved.user_id}}"
        	                }
                        }
                    ]
                },
                {
                	"name": "can verify a User has been deleted",
                    "description": "verify a User has been deleted",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/users/{{saved.user_id}}",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "save": {},
                            "status": 404
                        }
                    ]
                }
            ]
        },
        {
            "name": "t6 Open Suite (no Authentification required)",
            "tests": [
                {
                	"name": "can get all DataTypes",
                	"description": "get all DataTypes",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/datatypes",
                            "status": 200,
                            "assert": {
        	                    "select": "body.data",
        	                    "size": 9
        	                }
                        }
                    ]
                },
                {
                	"name": "can get all Units",
                	"description": "get all Units",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/units",
                            "status": 200,
                            "assert": {
        	                    "select": "body.data",
        	                    "size": 123
        	                }
                        }
                    ]
                },
                {
                	"name": "can get Volumes Units",
                	"description": "get Volumes Units",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/units?type=Volume",
                            "status": 200,
                            "assert": {
        	                    "select": "body.data",
        	                    "size": 13
        	                }
                        }
                    ]
                },
                {
                	"name": "can get Volumes Units",
                	"description": "get Volumes Units",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/units?type=Température",
                            "status": 200,
                            "assert": {
        	                    "select": "body.data",
        	                    "size": 4
        	                }
                        }
                    ]
                },
                {
                	"name": "can get Volumes Units",
                	"description": "get Volumes Units",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/units?type=Paper%20Quantity",
                            "status": 200,
                            "assert": {
        	                    "select": "body.data",
        	                    "size": 1
        	                }
                        }
                    ]
                },
                {
                	"name": "can get t6 server status",
                	"description": "get t6 server status",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/status",
                            "status": 200,
                            "assert": {
                            	"select": "body.status",
                            	"equal": "running"
        	                }
                        }
                    ]
                },
                {
                	"name": "can get t6 pwa index cards",
                	"description": "get t6 pwa index cards",
                    "api_calls": [
                        {
                        	"request": "GET /v2.0.1/index",
                            "status": 200,
                            "assert": {
                            	"select": "body.data",
                            	"size": 11
        	                }
                        }
                    ]
                }
            ]
        }
    ]
}