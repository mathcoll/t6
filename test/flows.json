{
    "config": {
        "log_path": "./jsonapitest-results.json",
        "defaults": {
            "api_call": {
                "request": {
                    "base_url": "http://127.0.0.1:3000",
                    "headers": {
                        "Accept": "application/json",
                        "Content-Type": "application/json"
                    }
                }
            }
        }
    },
    "data": {"app_version": "v2.0.1"},
    "suites": [
        {
            "name": "t6 Flows Suite",
            "tests": [
                {
                	"name": "can create a Flow for that User",
                    "description": "create a Flow for that User",
                    "api_calls": [
                        {
		                	"it": "can create a Flow for that User",
                        	"request": "POST /{{app_version}}/flows",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "params": {
                                "name": "My Flow for Strings",
                                "objects": [
                                    "{{saved.object_id}}"
                                ],
                                "unit": "String",
                                "data_type": "a394e18f-12bd-4c22-b9c3-74c387d1a8db"
                            },
                            "save": {
                                "saved.flow_id_string": "body.flow.data.id"
                            },
                            "status": "201"
                        },
                        {
		                	"it": "can create a Flow for a sentiment analysis",
                        	"request": "POST /{{app_version}}/flows",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "params": {
                                "name": "My sentiment analysis",
                                "unit": "String"
                            },
                            "save": {
                                "saved.flow_id_sentiment": "body.flow.data.id"
                            },
                            "status": "201"
                        },
                        {
		                	"it": "can create a Float Flow",
                        	"request": "POST /{{app_version}}/flows",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "params": {
                                "data_type": "e7dbdc23-5fa8-4083-b3ec-bb99c08a2a35",
                                "name": "My Flow for Float",
                                "objects": [
                                    "{{saved.object_id}}"
                                ],
                                "retention": "retention1w"
                            },
                            "save": {
                                "saved.flow_id_float": "body.flow.data.id",
                                "saved.retention_float": "body.flow.data.attributes.retention"
                            },
                            "status": "201"
                        },
                        {
		                	"it": "can update a Flow",
                        	"request": "PUT /{{app_version}}/flows/{{saved.flow_id_string}}",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "params": {
                                "data_type": "a394e18f-12bd-4c22-b9c3-74c387d1a8d",
                                "name": "My Flow for String is UPDATED",
                                "objects": [
                                    "{{saved.object_id}}"
                                ],
                                "unit": "",
                                "theme": "",
                                "retention": "retention1w",
                                "unit_id": "c528045b-4928-45ad-83fa-4a242eb6059e"
                            },
                            "status": 200,
                            "assert": [{
        	                    "select": "body.flow.data.attributes.name",
        	                    "equal": "My Flow for String is UPDATED"
        	                },{
        	                    "select": "body.flow.data.attributes.retention",
        	                    "equal": "retention1w"
        	                }]
                        },
                        {
		                	"it": "can create a Fusion Track",
                        	"request": "POST /{{app_version}}/flows/",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "params": {
				                "name": "Fused Track",
				                "unit": "31c38904-2482-4cce-b0de-6dc9efbc2d33",
				                "objects": [],
				                "require_signed": false,
				                "require_encrypted": false,
				                "data_type": "e7dbdc23-5fa8-4083-b3ec-bb99c08a2a35",
				                "mqtt_topic": "fused_track",
				                "track_id": "",
				                "ttl": 3600
				            },
                            "save": {
                                "saved.track_id": "body.flow.data.id",
                                "saved.retention_track": "body.flow.data.attributes.retention"
                            },
                            "status": 201,
                            "assert": []
                        },
                        {
		                	"it": "can create a Track A",
                        	"request": "POST /{{app_version}}/flows/",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "params": {
				                "name": "Track A",
				                "unit": "f7b31254-3bb6-468f-be90-57ae90a6be39",
				                "objects": [],
				                "require_signed": false,
				                "require_encrypted": false,
				                "permission": 600,
				                "data_type": "e7dbdc23-5fa8-4083-b3ec-bb99c08a2a35",
				                "mqtt_topic": "",
				                "track_id": "{{saved.track_id}}",
				                "ttl": 3600
				            },
                            "save": {
                                "saved.track_A_id": "body.flow.data.id",
                                "saved.retention_track": "body.flow.data.attributes.retention"
                            },
                            "status": 201,
                            "assert": []
                        },
                        {
		                	"it": "can create a Track B",
                        	"request": "POST /{{app_version}}/flows/",
                            "headers": {
                                "Authorization": "Bearer {{saved.bearer_token}}"
                            },
                            "params": {
				                "name": "Track B",
				                "unit": "f7b31254-3bb6-468f-be90-57ae90a6be39",
				                "objects": [],
				                "require_signed": false,
				                "require_encrypted": false,
				                "permission": 600,
				                "data_type": "e7dbdc23-5fa8-4083-b3ec-bb99c08a2a35",
				                "mqtt_topic": "",
				                "track_id": "{{saved.track_id}}",
				                "ttl": 3600
				            },
                            "save": {
                                "saved.track_B_id": "body.flow.data.id",
                                "saved.retention_track": "body.flow.data.attributes.retention"
                            },
                            "status": 201,
                            "assert": []
                        }
                    ]
                }
            ]
        }
    ]
}